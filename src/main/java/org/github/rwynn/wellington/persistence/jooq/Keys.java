/**
 * This class is generated by jOOQ
 */
package org.github.rwynn.wellington.persistence.jooq;

/**
 * This class is generated by jOOQ.
 *
 * A class modelling foreign key relationships between tables of the <code>public</code> 
 * schema
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.2" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.Identity<org.github.rwynn.wellington.persistence.jooq.tables.records.UsersRecord, java.lang.Integer> IDENTITY_USERS = Identities0.IDENTITY_USERS;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.UniqueKey<org.github.rwynn.wellington.persistence.jooq.tables.records.DatabasechangelogRecord> PK_DATABASECHANGELOG = UniqueKeys0.PK_DATABASECHANGELOG;
	public static final org.jooq.UniqueKey<org.github.rwynn.wellington.persistence.jooq.tables.records.DatabasechangeloglockRecord> PK_DATABASECHANGELOGLOCK = UniqueKeys0.PK_DATABASECHANGELOGLOCK;
	public static final org.jooq.UniqueKey<org.github.rwynn.wellington.persistence.jooq.tables.records.UsersRecord> USERS_USERNAME_KEY = UniqueKeys0.USERS_USERNAME_KEY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.ForeignKey<org.github.rwynn.wellington.persistence.jooq.tables.records.AuthoritiesRecord, org.github.rwynn.wellington.persistence.jooq.tables.records.UsersRecord> AUTHORITIES__FK_AUTHORITIES_USERS = ForeignKeys0.AUTHORITIES__FK_AUTHORITIES_USERS;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends org.jooq.impl.AbstractKeys {
		public static org.jooq.Identity<org.github.rwynn.wellington.persistence.jooq.tables.records.UsersRecord, java.lang.Integer> IDENTITY_USERS = createIdentity(org.github.rwynn.wellington.persistence.jooq.tables.Users.USERS, org.github.rwynn.wellington.persistence.jooq.tables.Users.USERS.ID);
	}

	private static class UniqueKeys0 extends org.jooq.impl.AbstractKeys {
		public static final org.jooq.UniqueKey<org.github.rwynn.wellington.persistence.jooq.tables.records.DatabasechangelogRecord> PK_DATABASECHANGELOG = createUniqueKey(org.github.rwynn.wellington.persistence.jooq.tables.Databasechangelog.DATABASECHANGELOG, org.github.rwynn.wellington.persistence.jooq.tables.Databasechangelog.DATABASECHANGELOG.ID, org.github.rwynn.wellington.persistence.jooq.tables.Databasechangelog.DATABASECHANGELOG.AUTHOR, org.github.rwynn.wellington.persistence.jooq.tables.Databasechangelog.DATABASECHANGELOG.FILENAME);
		public static final org.jooq.UniqueKey<org.github.rwynn.wellington.persistence.jooq.tables.records.DatabasechangeloglockRecord> PK_DATABASECHANGELOGLOCK = createUniqueKey(org.github.rwynn.wellington.persistence.jooq.tables.Databasechangeloglock.DATABASECHANGELOGLOCK, org.github.rwynn.wellington.persistence.jooq.tables.Databasechangeloglock.DATABASECHANGELOGLOCK.ID);
		public static final org.jooq.UniqueKey<org.github.rwynn.wellington.persistence.jooq.tables.records.UsersRecord> USERS_USERNAME_KEY = createUniqueKey(org.github.rwynn.wellington.persistence.jooq.tables.Users.USERS, org.github.rwynn.wellington.persistence.jooq.tables.Users.USERS.USERNAME);
	}

	private static class ForeignKeys0 extends org.jooq.impl.AbstractKeys {
		public static final org.jooq.ForeignKey<org.github.rwynn.wellington.persistence.jooq.tables.records.AuthoritiesRecord, org.github.rwynn.wellington.persistence.jooq.tables.records.UsersRecord> AUTHORITIES__FK_AUTHORITIES_USERS = createForeignKey(org.github.rwynn.wellington.persistence.jooq.Keys.USERS_USERNAME_KEY, org.github.rwynn.wellington.persistence.jooq.tables.Authorities.AUTHORITIES, org.github.rwynn.wellington.persistence.jooq.tables.Authorities.AUTHORITIES.USERNAME);
	}
}
