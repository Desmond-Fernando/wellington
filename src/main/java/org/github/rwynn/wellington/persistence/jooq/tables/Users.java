/**
 * This class is generated by jOOQ
 */
package org.github.rwynn.wellington.persistence.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.2" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Users extends org.jooq.impl.TableImpl<org.github.rwynn.wellington.persistence.jooq.tables.records.UsersRecord> {

	private static final long serialVersionUID = 812363238;

	/**
	 * The singleton instance of <code>public.users</code>
	 */
	public static final org.github.rwynn.wellington.persistence.jooq.tables.Users USERS = new org.github.rwynn.wellington.persistence.jooq.tables.Users();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.github.rwynn.wellington.persistence.jooq.tables.records.UsersRecord> getRecordType() {
		return org.github.rwynn.wellington.persistence.jooq.tables.records.UsersRecord.class;
	}

	/**
	 * The column <code>public.users.username</code>. 
	 */
	public final org.jooq.TableField<org.github.rwynn.wellington.persistence.jooq.tables.records.UsersRecord, java.lang.String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR.length(80), this);

	/**
	 * The column <code>public.users.key</code>. 
	 */
	public final org.jooq.TableField<org.github.rwynn.wellington.persistence.jooq.tables.records.UsersRecord, java.lang.String> KEY = createField("key", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this);

	/**
	 * The column <code>public.users.locked</code>. 
	 */
	public final org.jooq.TableField<org.github.rwynn.wellington.persistence.jooq.tables.records.UsersRecord, java.lang.Boolean> LOCKED = createField("locked", org.jooq.impl.SQLDataType.BOOLEAN.defaulted(true), this);

	/**
	 * The column <code>public.users.id</code>. 
	 */
	public final org.jooq.TableField<org.github.rwynn.wellington.persistence.jooq.tables.records.UsersRecord, java.lang.Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this);

	/**
	 * The column <code>public.users.version</code>. 
	 */
	public final org.jooq.TableField<org.github.rwynn.wellington.persistence.jooq.tables.records.UsersRecord, java.lang.Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * Create a <code>public.users</code> table reference
	 */
	public Users() {
		super("users", org.github.rwynn.wellington.persistence.jooq.Public.PUBLIC);
	}

	/**
	 * Create an aliased <code>public.users</code> table reference
	 */
	public Users(java.lang.String alias) {
		super(alias, org.github.rwynn.wellington.persistence.jooq.Public.PUBLIC, org.github.rwynn.wellington.persistence.jooq.tables.Users.USERS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<org.github.rwynn.wellington.persistence.jooq.tables.records.UsersRecord, java.lang.Integer> getIdentity() {
		return org.github.rwynn.wellington.persistence.jooq.Keys.IDENTITY_USERS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.github.rwynn.wellington.persistence.jooq.tables.records.UsersRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.github.rwynn.wellington.persistence.jooq.tables.records.UsersRecord>>asList(org.github.rwynn.wellington.persistence.jooq.Keys.USERS_USERNAME_KEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.github.rwynn.wellington.persistence.jooq.tables.Users as(java.lang.String alias) {
		return new org.github.rwynn.wellington.persistence.jooq.tables.Users(alias);
	}
}
